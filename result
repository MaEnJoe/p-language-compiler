
1: /**
2:  * decl.p: declarations
3:  */
4: //&T-
5: decl;
6: 
7: // global variables declaration
8: var ga: integer;
9: var gb, gc: boolean;
10: var gd: real;
11: var ge: string;
12: var garray: array 1 to 10 of integer;
13: 
14: // global constants declaration
15: var PI: 3.1415926;
16: var course: "Introduction to Compiler Design";
17: var isPass: true;
18: 
19: begin
20:         // local constants declaration
21:         var arraySize: 1024;
22: 
23:         // local variables declaration
24:         var la: integer;
25:         var lb, lc, ld: boolean;
26:         var le, lf: real;
27:         var lg: string;
28:         var L1darray: array 1 to 5 of integer;                  // one dimensional
29:         var L2darray: array 1 to 5 of array 1 to 3 of integer;  // two dimensional
30: 
31: 
compount statement
32: end
33: end decl

|--------------------------------|
|  There is no syntactic error!  |
|--------------------------------|
1: /**
2:  * err2.p: error case 2
3:  *
4:  * Description: local variable declaration after statement(s), at line 16
5:  */
6: //&T-
7: 
8: err2;
9: 
10: var globalA: integer;
11: 
12: begin
13: 
14:         globalA := 123;
15: 
1: /**
2:  * err.p: a simple syntactic error case
3:  */
4: //&T-
5: err;
6: 
7: begin
8: 	//int a = 3;
9: 	if a = 10 then i := i+1; 
1: /**
2:  * expr1.p: expression
3:  */
4: //&T-
5: expr1;
6: 
7: 
8: begin
9: 
10:         var a, b: integer;
11:         a := 2;
12:         b:= 3;
13: 
14:         print 1+2*(3+4);
15: 
16:         if a*3+1 <> b*4 mod 123 then
17:                 print "test";
18:         end if
19: 
compount statement
20: end
21: end expr1

|--------------------------------|
|  There is no syntactic error!  |
|--------------------------------|
1: /**
2:  * statement.p: examples for each statement
3:  */
4: //&T-
5: statement;
6: 
7: echo();
8: begin
9:         var s: string;
10:         read s;         // simple statement
11:         print s;        // simple statement
compount statement
12: end
declaration_func 1
13: end echo
14: 
15: funny(): boolean;
16: begin
17:         return 1<>1;    // return statement
compount statement
18: end 
declaration_func 2
19: end funny
20: 
21: 
22: begin
23: 
24:         var a, b: real;
25:         var i, k: integer;
26: 
27:         // simple statement
28:         a := 1.0;
29:         b := 2.3E-1;
30: 
31:         // compound statement
32:         begin
33:                 var c: boolean;
34:                 c := a < b;
compount statement
35:         end
36:         
37:         // condition statement
38:         if a > b then
39:                 print " a > b \n";
40:         else
41:                 print " a <= b \n";
42:         end if
43: 
44:         // while statement
45:         i := 1;
46:         while i <= 10 do
47:                 print i*i;
48:                 print "\n";
49:         end do
50: 
51:         // for statement
52:         for k := 10 to 20 do 
53:                 print k*3;
54:                 print "\n";
55:         end do
56: 
57:         // function invocation statement 
58:         echo();
59: 
compount statement
60: end
61: end statement

|--------------------------------|
|  There is no syntactic error!  |
|--------------------------------|
1: /**
2:  * test.p: simple P language example
3:  */
4: //&T-
5: test;
6: 
7: var a: integer;		// global variable
8: 
9: foo( a, b: integer ): integer;
10: begin
11: 	return a*b;
compount statement
12: end
declaration_func 2
13: end foo
14: 
15: // main block
16: begin
17: 
18: 	print foo(2*4,3);
19: 
compount statement
20: end
21: end test

|--------------------------------|
|  There is no syntactic error!  |
|--------------------------------|
